# Github actions용 설정. local처럼 똑같이 선언하되, :test용으로 넣어줄 기본값도 써주면된다.

# 예시)
# toss.payments.secret-key=${TOSS_KEY:test-toss-key}
#                                           ↑ 기본값(fallback)
# GitHub Secrets에 TOSS_KEY가 없어도 빌드가 실패하지 않도록 기본값 제공
# 실제 운영 키를 CI 환경에 노출시킬 필요가 없음
# 만약 GitHub Secrets에 TOSS_KEY가 등록되어 있다면: 실제 값 사용
# 만약 GitHub Secrets에 TOSS_KEY가 없다면: test-toss-key 기본값 사용


# GitHub Actions용 테스트 properties
# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=test_password

# JPA 설정 (MySQL용 방언 설정)
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true

# OAuth 테스트 설정 (CI/CD시 GitHub Secrets에서 주입)
spring.security.oauth2.client.registration.google.client-id=${OAUTH_ID:test-client-id}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH_PASSWORD:test-client-secret}
spring.security.oauth2.client.registration.google.scope=email,profile

# JWT 테스트 설정
spring.jwt.secret=${JWT:test-jwt-secret-key-for-ci-environment}

# 메일 테스트 설정
spring.mail.username=${MAIL_ID:test@example.com}
spring.mail.password=${MAIL_PASSWORD:test-password}
email.send=${MAIL_ID:test@example.com}

# CI/CD 테스트용 (GitHub Secrets에서 주입)
payment.toss.secretKey=${TOSS_KEY:test-toss-key}
