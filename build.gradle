plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.tryiton'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

// Spring Cloud AWS BOM 추가
dependencyManagement {
	imports {
		mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:3.1.1"
	}
}

dependencies {
	// 기존 의존성들 (develop 브랜치와 동일)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'io.github.cdimascio:java-dotenv:5.2.2'
//	implementation 'me.paulschwarz:spring-dotenv:2.2.0'
	
	// AWS 관련 의존성 추가
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-secrets-manager'
	
	// Actuator 추가 (헬스체크용)
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation group: 'com.google.api-client', name: 'google-api-client', version: '2.8.0'
	implementation 'com.google.http-client:google-http-client-jackson2:1.43.3'

	implementation 'org.springframework.boot:spring-boot-starter-mail'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

// 테스트 설정 (CI/CD용)
tasks.named('test') {
	useJUnitPlatform()
	systemProperty 'spring.profiles.active', 'test'
	systemProperty 'spring.config.import', ''
}
